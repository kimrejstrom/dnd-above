// Generated by https://quicktype.io

export interface BestiaryFluff {
  _meta?: Meta;
  monsterFluff: MonsterFluff[];
}

export interface Meta {
  internalCopies: string[];
}

export interface MonsterFluff {
  name: string;
  source: string;
  entries?: Array<StickyEntry | string>;
  images?: Image[] | null;
  _copy?: Copy;
}

export interface Copy {
  name: string;
  source: string;
  _mod?: Mod;
}

export interface Mod {
  entries: Entries;
  images?: Images;
}

export interface Entries {
  mode: Mode;
  items: Items;
}

export interface Items {
  type: PurpleType;
  entries: Array<PurpleEntry | string>;
  name?: string;
}

export interface PurpleEntry {
  type: PurpleType;
  entries: Array<FluffyEntry | string>;
  name?: string;
}

export interface FluffyEntry {
  name: string;
  type: PurpleType;
  entries: Array<TentacledEntry | string>;
}

export interface TentacledEntry {
  name: string;
  entries: string[];
  type: PurpleType;
}

export enum PurpleType {
  Entries = 'entries',
  Inset = 'inset',
  Quote = 'quote',
  Section = 'section',
  Table = 'table',
}

export enum Mode {
  AppendArr = 'appendArr',
  PrependArr = 'prependArr',
}

export interface Images {
  mode: Mode;
  items: Image;
}

export interface Image {
  type: ImageType;
  href: Href;
}

export interface Href {
  type: HrefType;
  path: string;
}

export enum HrefType {
  Internal = 'internal',
}

export enum ImageType {
  Image = 'image',
}

export interface StickyEntry {
  type: PurpleType;
  entries?: Array<IndigoEntry | string>;
  name?: string;
  colLabels?: string[];
  colStyles?: string[];
  rows?: Array<string[]>;
}

export interface IndigoEntry {
  type: TentacledType;
  entries?: Array<IndecentEntry | string>;
  name?: string;
  items?: string[];
}

export interface IndecentEntry {
  type: PurpleType;
  name?: string;
  entries?: Array<HilariousEntry | string>;
  by?: string;
  caption?: string;
  colLabels?: string[];
  colStyles?: string[];
  rows?: Array<string[]>;
}

export interface HilariousEntry {
  name?: string;
  entries?: Array<AmbitiousEntry | string>;
  type: FluffyType;
  items?: string[];
  caption?: string;
  colLabels?: string[];
  colStyles?: string[];
  rows?: Array<string[]>;
  style?: string;
}

export interface AmbitiousEntry {
  type: PurpleType;
  entries: Array<CunningEntry | string>;
  name?: string;
}

export interface CunningEntry {
  type: PurpleType;
  name: string;
  entries: Array<MagentaEntry | string>;
}

export interface MagentaEntry {
  type: FluffyType;
  items: string[];
}

export enum FluffyType {
  Entries = 'entries',
  List = 'list',
  Table = 'table',
}

export enum TentacledType {
  Entries = 'entries',
  Inset = 'inset',
  List = 'list',
}
