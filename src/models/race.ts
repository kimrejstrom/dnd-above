// Generated by https://quicktype.io

export interface Races {
  _meta: Meta;
  race: Race[];
}

export interface Meta {
  internalCopies: string[];
}

export interface Race {
  name: string;
  source: string;
  page: number;
  size?: Size;
  speed?: SpeedClass | number | string;
  ability?: Ability[];
  entries?: RaceEntry[];
  soundClip?: string;
  traitTags?: string[];
  languageProficiencies?: RaceLanguageProficiency[];
  subraces?: Subrace[];
  darkvision?: number;
  skillProficiencies?: RaceSkillProficiency[];
  srd?: boolean;
  otherSources?: OtherSource[];
  _copy?: Copy;
  _isBaseRace?: boolean;
}

export interface Copy {
  name: string;
  source: string;
  _mod: Mod;
}

export interface Mod {
  entries: Entries;
}

export interface Entries {
  mode: string;
  replace: string;
  items: Items;
}

export interface Items {
  name: string;
  entries: string[];
  type: ItemsType;
}

export enum ItemsType {
  Entries = 'entries',
  Inset = 'inset',
}

export interface Ability {
  dex?: number;
  wis?: number;
  con?: number;
  int?: number;
  str?: number;
  cha?: number;
  choose?: AbilityChoose;
}

export interface AbilityChoose {
  from: FromEnum[];
  count: number;
  amount?: number;
}

export enum FromEnum {
  Cha = 'cha',
  Con = 'con',
  Dex = 'dex',
  Int = 'int',
  Str = 'str',
  Wis = 'wis',
}

export interface RaceEntry {
  name?: string;
  type: ItemsType;
  entries: Array<PurpleEntry | string>;
  data?: Data;
}

export interface Data {
  overwrite: string;
}

export interface PurpleEntry {
  type: PurpleType;
  caption?: string;
  colLabels?: string[];
  colStyles?: string[];
  rows?: Array<string[]>;
  name?: string;
  entries?: Array<FluffyEntry | string>;
  items?: Array<ItemClass | string>;
  style?: string;
}

export interface FluffyEntry {
  type: PurpleType;
  style: string;
  items: ItemClass[];
}

export interface ItemClass {
  type: ItemType;
  name: string;
  entry: string;
}

export enum ItemType {
  Item = 'item',
  ItemSpell = 'itemSpell',
}

export enum PurpleType {
  Entries = 'entries',
  Inset = 'inset',
  List = 'list',
  Table = 'table',
}

export interface RaceLanguageProficiency {
  common?: boolean;
  other?: boolean;
  primordial?: boolean;
  elvish?: boolean;
  gnomish?: boolean;
  draconic?: boolean;
  giant?: boolean;
  anyStandard?: number;
  dwarvish?: boolean;
  halfling?: boolean;
  sylvan?: boolean;
  infernal?: boolean;
  goblin?: boolean;
  celestial?: boolean;
  orc?: boolean;
  abyssal?: boolean;
  undercommon?: boolean;
  choose?: LanguageProficiencyChoose;
  aquan?: boolean;
}

export interface LanguageProficiencyChoose {
  from: string[];
  count: number;
}

export interface OtherSource {
  source: Source;
  page: number;
}

export enum Source {
  Eepc = 'EEPC',
  Scag = 'SCAG',
  Uawge = 'UAWGE',
}

export enum Size {
  M = 'M',
  S = 'S',
  V = 'V',
}

export interface RaceSkillProficiency {
  perception?: boolean;
  athletics?: boolean;
  choose?: SkillProficiencyChoose;
  stealth?: boolean;
  intimidation?: boolean;
  deception?: boolean;
  acrobatics?: boolean;
  survival?: boolean;
  persuasion?: boolean;
}

export interface SkillProficiencyChoose {
  from: Array<FromClass | string>;
  count?: number;
}

export interface FromClass {
  tool: boolean;
}

export interface SpeedClass {
  walk: number;
  fly?: number;
  swim?: number;
  climb?: number;
}

export interface Subrace {
  name?: string;
  ability?: Ability[];
  entries?: Array<TentacledEntry | string>;
  traitTags?: TraitTag[];
  darkvision?: number;
  speed?: SpeedClass | number;
  source?: string;
  page?: number;
  srd?: boolean;
  overwrite?: Overwrite;
  languageProficiencies?: SubraceLanguageProficiency[];
  otherSources?: OtherSource[];
  skillProficiencies?: SubraceSkillProficiency[];
}

export interface TentacledEntry {
  name: string;
  entries: Array<StickyEntry | string>;
  type: ItemsType;
  data?: Data;
}

export interface StickyEntry {
  type: PurpleType;
  caption?: string;
  colLabels?: string[];
  colStyles?: ColStyle[];
  rows?: Array<string[]>;
  style?: string;
  items?: ItemClass[];
  name?: string;
  entries?: string[];
}

export enum ColStyle {
  Col10 = 'col-10',
  Col1TextCenter = 'col-1 text-center',
  Col2TextCenter = 'col-2 text-center',
  Col367 = 'col-3-67',
  Col6TextCenter = 'col-6 text-center',
}

export interface SubraceLanguageProficiency {
  sylvan?: boolean;
  elvish?: boolean;
  anyStandard?: number;
  common?: boolean;
  gnomish?: boolean;
  undercommon?: boolean;
  orc?: boolean;
  goblin?: boolean;
  dwarvish?: boolean;
  other?: boolean;
  abyssal?: boolean;
}

export interface Overwrite {
  languageProficiencies?: boolean;
  skillProficiencies?: boolean;
  ability?: boolean;
  traitTags?: boolean;
}

export interface SubraceSkillProficiency {
  choose?: SkillProficiencyChoose;
  intimidation?: boolean;
  athletics?: boolean;
  tool?: boolean;
  'sleight of hand'?: boolean;
  stealth?: boolean;
  deception?: boolean;
  persuasion?: boolean;
  survival?: boolean;
  'animal handling'?: boolean;
  perception?: boolean;
  history?: boolean;
  nature?: boolean;
  acrobatics?: boolean;
}

export enum TraitTag {
  Amphibious = 'Amphibious',
  ArmorProficiency = 'Armor Proficiency',
  DamageResistance = 'Damage Resistance',
  Dragonmark = 'Dragonmark',
  NaturalArmor = 'Natural Armor',
  PowerfulBuild = 'Powerful Build',
  SkillProficiency = 'Skill Proficiency',
  Spellcasting = 'Spellcasting',
  ToolProficiency = 'Tool Proficiency',
  UnarmedStrike = 'Unarmed Strike',
  WeaponProficiency = 'Weapon Proficiency',
}
