// Generated by https://quicktype.io

export interface OptionalFeatures {
  optionalfeature: Optionalfeature[];
}

export interface Optionalfeature {
  name: string;
  source: string;
  page?: number;
  featureType: string[] | string;
  entries: Array<EntryClass | string>;
  srd?: boolean;
  prerequisite?: Prerequisite[];
  isClassFeatureVariant?: boolean;
  otherSources?: OtherSource[];
  previousVersion?: PreviousVersion;
}

export interface EntryClass {
  type: Type;
  items?: string[];
  caption?: string;
  colLabels?: ColLabel[];
  colStyles?: string[];
  rows?: Array<string[]>;
}

export enum ColLabel {
  Attunement = 'Attunement',
  MagicItem = 'Magic Item',
}

export enum Type {
  List = 'list',
  Table = 'table',
}

export interface OtherSource {
  source: string;
  page: number;
}

export interface Prerequisite {
  spell?: string[];
  pact?: Pact;
  level?: Level;
  item?: string[];
  patron?: string;
  otherSummary?: OtherSummary;
}

export interface Level {
  level: number;
  class: Class;
  subclass?: Class;
}

export interface Class {
  name: string;
}

export interface OtherSummary {
  entry: string;
  entrySummary: string;
}

export enum Pact {
  Blade = 'Blade',
  Chain = 'Chain',
  Talisman = 'Talisman',
  Tome = 'Tome',
}

export interface PreviousVersion {
  name: string;
  source: string;
}
