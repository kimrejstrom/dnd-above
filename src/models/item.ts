// Generated by https://quicktype.io

export interface Item {
  baseItem: BaseItem[];
  itemProperty: ItemProperty[];
  itemType: ItemType[];
  itemTypeAdditionalEntries: ItemTypeAdditionalEntry[];
}

export interface BaseItem {
  name: string;
  type: string;
  weapon?: boolean;
  weaponCategory?: WeaponCategory;
  age?: Age;
  rarity: Rarity;
  weight?: number;
  dmg1?: string;
  dmgType?: DmgType;
  property?: string[];
  range?: string;
  reload?: number;
  source: Source;
  page: number;
  firearm?: boolean;
  value?: number;
  srd?: boolean;
  quantity?: number;
  axe?: boolean;
  dmg2?: string;
  armor?: boolean;
  ac?: number;
  entries?: Array<ItemPropertyEntry | string>;
  strength?: string;
  stealth?: boolean;
  scfType?: string;
  sword?: boolean;
  otherSources?: OtherSource[];
  staff?: boolean;
}

export enum Age {
  Futuristic = 'Futuristic',
  Modern = 'Modern',
  Renaissance = 'Renaissance',
}

export enum DmgType {
  B = 'B',
  N = 'N',
  P = 'P',
  R = 'R',
  S = 'S',
}

export interface ItemPropertyEntry {
  type: Type;
  name: string;
  entries: string[];
}

export enum Type {
  Entries = 'entries',
}

export interface OtherSource {
  source: string;
  page: number;
}

export enum Rarity {
  None = 'None',
  Unknown = 'Unknown',
}

export enum Source {
  Dmg = 'DMG',
  Erlw = 'ERLW',
  OotA = 'OotA',
  Phb = 'PHB',
  Scag = 'SCAG',
  ToA = 'ToA',
}

export enum WeaponCategory {
  Martial = 'Martial',
  Simple = 'Simple',
}

export interface ItemProperty {
  abbreviation: string;
  source: Source;
  page: number;
  entries?: ItemPropertyEntry[];
  template?: string;
  name?: string;
}

export interface ItemType {
  abbreviation: string;
  source: Source;
  page: number;
  name?: string;
  entries: Array<ItemPropertyEntry | string>;
}

export interface ItemTypeAdditionalEntry {
  appliesTo: string;
  entries: Array<PurpleEntry | string>;
}

export interface PurpleEntry {
  type: string;
  name?: string;
  entries?: string[];
  caption?: string;
  colLabels?: string[];
  colStyles?: string[];
  rows?: Array<string[]>;
}
